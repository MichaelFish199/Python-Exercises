				*** DICT ***




	
using dict = {'name': 'Mikolaj', 'age': 23} and .format()									>				or    "{0[name]}"  {1[name]} .format(dict)
	complete string "my name is {} and i am {} years old."					>				>			"  {0} {1}  ".format(dict['name'], dict['age'])




copy dict = {'kaja': 'maj', 'maid': 'wolf'}	>								>				using .copy() 

			>		fromkeys()



a = {"brand": "Ford", 'kaja': 'maj'} b = {'kaja': 'maj', 'maid': 'wolf'} combine these dictioneries so there are no multiple elements				>				= {**a, **b}

update a dict = {'kaja': 'maj', 'maid': 'wolf'} by 'kaja' = 23	and  'marta' without  value				>		.update(kaja=23, marta=None)

check all values in dict = {"brand": "Ford", "electric": False, "year": 1964,"colors": ["red", "white", "blue"]}	>		.values()

get an item from key kaja and maja {'kaja': 'maj', 'maid': 'wolf'}							>		using .get() > if key not found it pops NONE	using dict['adw'] = 'sam' it and key not found it pops error

remove specific item "brand" from dict = {"brand": "Ford", "electric": False, "year": 1964,"colors": ["red", "white", "blue"]}			>		.pop()

to dic {'kaja': 'maj', 'maid': 'wolf'} add another object						>>						dict['adw'] = 'sam'

convert dict {'kaja': 'maj', 'maid': 'wolf'} to JSON object using									>	import json	 json.dumps(dict) or json.dump(dict)

to dictionary {'kaja': 'maj', 'maid': 'wolf'} add another object with key 'list' and value [1, 2, 3, 51, 23]

using for loop display all keys = values   dict = {"brand": "Ford", "electric": False, "year": 1964,"colors": ["red", "white", "blue"]} 		->>		for key in dict.keys():	value = dict[key]     print(key, " = ", value) or      for key, value in dict.items(): print(key, " = ", value)

fix!  you have dict with many None values = {'gruby': None, "brand": None, "electric": False, "year": 1964,"colors": ["red", "None", "blue"]}  change tham to 1999	>		dict.setdefault(1999)

convert list [1, 2, 3, 4, 5] into dictionary using numbers in list as keys			>					>			dict.fromkeys(list, value)

using previous method create dict using range from 1 to 10 keys and all values 0			>>				>			{}.fromkeys(range(1,11), 0)

ages = {'kaja': '21', 'maid': '24'}
complete a string f'kaja ma {age} lat'						>							>		age = ages.get('kaja', Unknown)	unknown will pop ifd person doesnt exist in dict
